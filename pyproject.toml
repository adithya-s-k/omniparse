[tool.poetry]
name = "omniparse"
version = "0.0.1"
description = "API to convert Documents | Media | Webpage into Structured Markdown for LLM usecases"
authors = ["Adithya S K <adithyaskolavi@gmail.com>"]
license = "Apache"
readme = "README.md"
keywords = ["pdf", "markdown", "ocr", "parse"]
include = [
    "server.py",
]

[tool.poetry.dependencies]
python = "^3.10"
scikit-learn = "^1.3.2"
Pillow = "^10.1.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
transformers = "^4.41.2" 
numpy = "^1.26.1"
python-dotenv = "^1.0.0"
torch = "^2.2.2" # Issue with torch 2.3.0 and vision models - https://github.com/pytorch/pytorch/issues/121834
tqdm = "^4.66.1"
tabulate = "^0.9.0"
ftfy = "^6.1.1"
texify = "^0.1.8"
rapidfuzz = "^3.8.1"
surya-ocr = "^0.4.3"
filetype = "^1.2.0"
regex = "^2024.4.28"
pdftext = "^0.3.10"
grpcio = "^1.63.0"
fastapi = "^0.111.0"
uvicorn = "^0.29.0"
pypdfium2 = "^4.30.0"
moviepy = "^1.0.3"
openai-whisper = "^20231117"
pytube = "^15.0.0"
beautifulsoup4 = "^4.12.3"
html2text = "^2024.2.26"
selenium = "^4.21.0"
webdriver-manager = "^4.0.1"
img2pdf = "^0.5.1"
matplotlib = "^3.9.0"
timm = "^1.0.7"
flash-attn = "^2.5.9"
art = "^6.2"
gradio = "^4.37.1"
nltk = "^3.8.1"
marker-pdf = "^0.2.16"

[tool.poetry.scripts]
omniparse = "server:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".mypy_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]

# Avoid enforcing line-length violations (`E501`), and white space before :
ignore = ["E501", "E203"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = true

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"